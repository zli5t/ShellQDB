#!/bin/sed -f

# NOTES
# escq (escape quote): sanitize the input and convert it into one-line form,
# then output it to standard output.  Accepts one argument (the literal body of
# the quote), but you really should use this with pipes (see USAGE->Example(s)).
# Meant to be used where the output is piped into addq (see USAGE of addq)
#
# USAGE
# escq [literal form of quote]
# Example(s):
# echo "<lietk12> so this guy says "foo\nbar"
# <skr> foobar" | escq
#  Comment: The two above lines are one command.  The output of this command is:
#   <lietk12> so this guy says "foo\\nbar"\n<skr> foobar
#  Obviously, this should be piped into addq (see the USAGE of addq)
# cat thisFileContainsOneQuote | escq
#  Comment: the output of this command is:
#   <lietk12> so this guy says "foo\\nbar"\n<skr> foobar
#  The command "cat thisFileContainsOneQuote" returns:
#   <lietk12> so this guy says "foo\nbar"
#   <skr> foobar

# Replace "\\" with "\\\\"
s_\\_\\\\_g
# Replace ":" with "\\:"
s_:_\\:_g
# This does something.
:a;N;$!ba;s_\\_\\\\_g;s_:_\\:_g;s_\n_\\n_g
